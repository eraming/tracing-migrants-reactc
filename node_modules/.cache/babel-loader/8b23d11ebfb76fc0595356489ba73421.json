{"ast":null,"code":"var _jsxFileName = \"/Users/eraming/Documents/Kickstart/Winter2020/HW4/tracing-migrants-rcomp/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Nav from './components/Nav/Nav.js';\nimport BarChart from './components/BarChart/BarChart.js';\nimport Dropdown from './components/Dropdown/Dropdown.js';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      regionTotals: [],\n      migrants2019: [],\n      value: ''\n    };\n\n    this.onSelectChange = ev => {\n      this.setState({\n        value: ev.target.value\n      });\n      this.onlyRegionTotals();\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"./region-total.json\", {\n      mode: 'cors',\n      method: 'get',\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(\"2019 total by region:\", data);\n      this.setState({\n        regionTotals: data\n      });\n    });\n  }\n\n  onlyRegionTotals() {\n    fetch(\"./migrants2019.json\", {\n      mode: 'cors',\n      method: 'get',\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(response => response.json()).then(fulldata => {\n      let totals = this.dataToTotals(fulldata, this.state.value); // console.log(\"this.state.value\", this.state.value);\n\n      console.log(\"totals\", totals);\n      this.setState({\n        migrants2019: totals\n      });\n    });\n  }\n\n  dataToTotals(fulldata, selectedMonth) {\n    let monthly_totals = {\n      'US-Mexico Border': 0,\n      'Sub-Saharan Africa': 0,\n      'Mediterranean': 0,\n      'North Africa': 0,\n      'South East Asia': 0,\n      'South Asia': 0,\n      'South America': 0,\n      'Horn of Africa': 0,\n      'Middle East': 0,\n      'Europe': 0,\n      'Central America': 0\n    };\n    let region;\n    let dead;\n    let month;\n\n    for (let migrantInfo of fulldata) {\n      region = migrantInfo['Region of Incident'];\n      dead = parseFloat(migrantInfo['Number Dead']);\n      month = migrantInfo['Reported Month'];\n\n      if (region && month === selectedMonth) {\n        monthly_totals[region] += dead;\n        console.log(monthly_totals[region], region);\n      }\n    }\n\n    ;\n    return monthly_totals;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"GridContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      value: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Dropdown, {\n      value: this.props.value,\n      onSelectChange: this.onSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(BarChart, {\n      dropdownValue: this.state.value,\n      migrants2019: this.state.migrants2019,\n      regionTotals: this.state.regionTotals,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"BarChart-max\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"max\"), React.createElement(\"hr\", {\n      className: \"BottomLine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/eraming/Documents/Kickstart/Winter2020/HW4/tracing-migrants-rcomp/src/App.js"],"names":["React","Component","Nav","BarChart","Dropdown","App","state","regionTotals","migrants2019","value","onSelectChange","ev","setState","target","onlyRegionTotals","componentDidMount","fetch","mode","method","headers","then","response","json","data","console","log","fulldata","totals","dataToTotals","selectedMonth","monthly_totals","region","dead","month","migrantInfo","parseFloat","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Nav from './components/Nav/Nav.js';\nimport BarChart from './components/BarChart/BarChart.js';\nimport Dropdown from './components/Dropdown/Dropdown.js';\n\nclass App extends Component {\n  state = {\n    regionTotals: [],\n    migrants2019: [],\n    value: '',\n  }\n\n\nonSelectChange = (ev) => {\n  this.setState({value: ev.target.value});\n  this.onlyRegionTotals();\n\n}\n\n\n  componentDidMount() {\n    fetch(\"./region-total.json\", { mode: 'cors', method: 'get', headers: { 'Access-Control-Allow-Origin': '*' }})\n      .then(response => response.json())\n      .then(data => {\n\n        console.log(\"2019 total by region:\", data);\n        this.setState({\n          regionTotals: data,\n\n        });\n\n      });\n  }\n\n  onlyRegionTotals () {\n    fetch(\"./migrants2019.json\", { mode: 'cors', method: 'get', headers: { 'Access-Control-Allow-Origin': '*' }})\n      .then(response => response.json())\n      .then(fulldata => {\n        let totals  = this.dataToTotals(fulldata, this.state.value)\n        // console.log(\"this.state.value\", this.state.value);\n        console.log(\"totals\", totals);\n        this.setState({\n          migrants2019: totals,\n        });\n      });\n  }\n\n  dataToTotals(fulldata, selectedMonth){\n\n    let monthly_totals = {\n      'US-Mexico Border': 0,\n      'Sub-Saharan Africa': 0,\n      'Mediterranean': 0,\n      'North Africa': 0,\n      'South East Asia': 0,\n      'South Asia': 0,\n      'South America': 0,\n      'Horn of Africa': 0,\n      'Middle East': 0,\n      'Europe': 0,\n      'Central America': 0,\n    }\n\n    let region;\n    let dead;\n    let month;\n\n\n    for (let migrantInfo of fulldata) {\n        region = migrantInfo['Region of Incident'];\n        dead = parseFloat(migrantInfo['Number Dead']);\n        month = migrantInfo['Reported Month'];\n\n        if (region && month === selectedMonth) {\n            monthly_totals[region] += dead;\n            console.log(monthly_totals[region], region);\n        }\n      };\n\n      return monthly_totals\n  }\n\n\n  render() {\n\n    return (\n      <div className=\"App\">\n      <header className=\"App-header\"></header>\n      <div className=\"GridContainer\">\n      <div className=\"Header\">\n      <Nav\n      value={this.state.value}\n      />\n\n      <Dropdown \n      value={this.props.value}\n      onSelectChange={this.onSelectChange}\n       />\n</div>\n      <BarChart\n      dropdownValue={this.state.value}\n      migrants2019={this.state.migrants2019}\n      regionTotals={this.state.regionTotals}\n      />\n\n\n      </div>\n      <div className=\"BarChart-max\">max</div>\n      <hr className=\"BottomLine\" />\n      </div>\n\n\n\n    );\n  };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}