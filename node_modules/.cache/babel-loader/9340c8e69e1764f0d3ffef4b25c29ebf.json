{"ast":null,"code":"var _jsxFileName = \"/Users/eraming/Documents/Kickstart/Winter2020/HW4/tracing-migrants-rcomp/src/components/BarChart/BarChart.js\";\nimport React, { Component } from 'react';\nimport './BarChart.css';\n\nclass BarChart extends Component {\n  dataToTotals(fulldata, selectedMonth) {\n    let monthly_totals = {\n      'US-Mexico Border': 0,\n      'Sub-Saharan Africa': 0,\n      'Mediterranean': 0,\n      'North Africa': 0,\n      'South East Asia': 0,\n      'South Asia': 0,\n      'South America': 0,\n      'Horn of Africa': 0,\n      'Middle East': 0,\n      'Europe': 0,\n      'Central America': 0\n    };\n    let region;\n    let dead;\n    let month;\n\n    for (let migrantInfo of fulldata) {\n      region = migrantInfo['Region of Incident'];\n      dead = parseFloat(migrantInfo['Number Dead']);\n      month = migrantInfo['Reported Month'];\n\n      if (region && month === selectedMonth) {\n        monthly_totals[region] += dead;\n        console.log(monthly_totals[region], region);\n      }\n    }\n\n    ;\n    return monthly_totals;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"BarChart\",\n      className: \"BarChart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.props.dropdownValue ? Object.keys(this.props.migrants2019).map(region => this.props.migrants2019[region] > 1 ? React.createElement(\"div\", {\n      className: \"BarChart-bar\",\n      style: {\n        width: this.props.migrants2019[region] * 9 + \"px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, region, React.createElement(\"span\", {\n      className: \"total\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \" \", this.props.migrants2019[region], \" \")) : null) : this.state.regionTotals.map(data => React.createElement(\"div\", {\n      className: \"BarChart-bar\",\n      style: {\n        width: data.total\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, data.region, React.createElement(\"span\", {\n      className: \"total\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" \", data.total, \" \"))));\n  }\n\n}\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/eraming/Documents/Kickstart/Winter2020/HW4/tracing-migrants-rcomp/src/components/BarChart/BarChart.js"],"names":["React","Component","BarChart","dataToTotals","fulldata","selectedMonth","monthly_totals","region","dead","month","migrantInfo","parseFloat","console","log","render","props","dropdownValue","Object","keys","migrants2019","map","width","state","regionTotals","data","total"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAE/BE,EAAAA,YAAY,CAACC,QAAD,EAAWC,aAAX,EAAyB;AAEnC,QAAIC,cAAc,GAAG;AACnB,0BAAoB,CADD;AAEnB,4BAAsB,CAFH;AAGnB,uBAAiB,CAHE;AAInB,sBAAgB,CAJG;AAKnB,yBAAmB,CALA;AAMnB,oBAAc,CANK;AAOnB,uBAAiB,CAPE;AAQnB,wBAAkB,CARC;AASnB,qBAAe,CATI;AAUnB,gBAAU,CAVS;AAWnB,yBAAmB;AAXA,KAArB;AAcA,QAAIC,MAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,KAAJ;;AAGA,SAAK,IAAIC,WAAT,IAAwBN,QAAxB,EAAkC;AAC9BG,MAAAA,MAAM,GAAGG,WAAW,CAAC,oBAAD,CAApB;AACAF,MAAAA,IAAI,GAAGG,UAAU,CAACD,WAAW,CAAC,aAAD,CAAZ,CAAjB;AACAD,MAAAA,KAAK,GAAGC,WAAW,CAAC,gBAAD,CAAnB;;AAEA,UAAIH,MAAM,IAAIE,KAAK,KAAKJ,aAAxB,EAAuC;AACnCC,QAAAA,cAAc,CAACC,MAAD,CAAd,IAA0BC,IAA1B;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYP,cAAc,CAACC,MAAD,CAA1B,EAAoCA,MAApC;AACH;AACF;;AAAA;AAED,WAAOD,cAAP;AACH;;AAGDQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAmB,MAAA,SAAS,EAAC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,KAAKC,KAAL,CAAWC,aAAX,GAECC,MAAM,CAACC,IAAP,CAAY,KAAKH,KAAL,CAAWI,YAAvB,EAAqCC,GAArC,CAAyCb,MAAM,IAE9C,KAAKQ,KAAL,CAAWI,YAAX,CAAwBZ,MAAxB,IAAkC,CAAlC,GAEC;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,KAAK,EAAE;AAACc,QAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWI,YAAX,CAAwBZ,MAAxB,IAAkC,CAAlC,GAAsC;AAA9C,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCA,MADD,EAEA;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA0B,KAAKQ,KAAL,CAAWI,YAAX,CAAwBZ,MAAxB,CAA1B,MAFA,CAFD,GAOG,IATJ,CAFD,GAiBG,KAAKe,KAAL,CAAWC,YAAX,CAAwBH,GAAxB,CAA4BI,IAAI,IAC9B;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,KAAK,EAAE;AAACH,QAAAA,KAAK,EAAEG,IAAI,CAACC;AAAb,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCD,IAAI,CAACjB,MADN,EAEA;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA0BiB,IAAI,CAACC,KAA/B,MAFA,CADF,CApBL,CADF;AAkCD;;AAzE8B;;AA4EjC,eAAevB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport './BarChart.css';\n\nclass BarChart extends Component {\n\n  dataToTotals(fulldata, selectedMonth){\n\n    let monthly_totals = {\n      'US-Mexico Border': 0,\n      'Sub-Saharan Africa': 0,\n      'Mediterranean': 0,\n      'North Africa': 0,\n      'South East Asia': 0,\n      'South Asia': 0,\n      'South America': 0,\n      'Horn of Africa': 0,\n      'Middle East': 0,\n      'Europe': 0,\n      'Central America': 0,\n    }\n\n    let region;\n    let dead;\n    let month;\n\n\n    for (let migrantInfo of fulldata) {\n        region = migrantInfo['Region of Incident'];\n        dead = parseFloat(migrantInfo['Number Dead']);\n        month = migrantInfo['Reported Month'];\n\n        if (region && month === selectedMonth) {\n            monthly_totals[region] += dead;\n            console.log(monthly_totals[region], region);\n        }\n      };\n\n      return monthly_totals\n  }\n\n\n  render() {\n    return (\n      <div id=\"BarChart\" className=\"BarChart\">\n      {\n\n        this.props.dropdownValue ? (\n\n         Object.keys(this.props.migrants2019).map(region => (\n\n          this.props.migrants2019[region] > 1 ? (\n\n           <div className=\"BarChart-bar\" style={{width: this.props.migrants2019[region] * 9 + \"px\" }}>\n           {region}\n           <span className=\"total\"> {this.props.migrants2019[region]} </span>\n           </div>\n\n         ) : null\n\n         ))\n\n         ) : (\n\n           this.state.regionTotals.map(data => (\n             <div className=\"BarChart-bar\" style={{width: data.total }} >\n             {data.region}\n             <span className=\"total\"> {data.total} </span>\n             </div>\n         ))\n\n         )\n      }\n\n            </div>\n\n    );\n  }\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}