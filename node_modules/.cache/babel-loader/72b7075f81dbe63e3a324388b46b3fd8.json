{"ast":null,"code":"var _jsxFileName = \"/Users/eraming/Documents/Kickstart/Winter2020/HW3/tracing-migrants-react/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      regionTotals: [],\n      migrants2019: [],\n      value: ''\n    };\n\n    this.onSelectChange = ev => {\n      this.setState({\n        value: ev.target.value\n      });\n      this.onlyRegionTotals();\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"./region-total.json\", {\n      mode: 'cors',\n      method: 'get',\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(\"year total by region:\", data);\n      this.setState({\n        regionTotals: data\n      });\n      this.onlyRegionTotals();\n    });\n  }\n\n  dataToTotals(fulldata, selectedMonth) {\n    let monthly_totals = {\n      'US-Mexico Border': 0,\n      'Sub-Saharan Africa': 0,\n      'Mediterranean': 0,\n      'North Africa': 0,\n      'South East Asia': 0,\n      'South Asia': 0,\n      'South America': 0,\n      'Horn of Africa': 0,\n      'Middle East': 0,\n      'Europe': 0,\n      'Central America': 0\n    };\n    let region;\n    let dead;\n    let month;\n\n    for (let migrantInfo of fulldata) {\n      region = migrantInfo['Region of Incident'];\n      dead = parseFloat(migrantInfo['Number Dead']);\n      month = migrantInfo['Reported Month'];\n\n      if (region && month === selectedMonth) {\n        monthly_totals[region] += dead;\n        console.log(monthly_totals[region], region);\n      }\n    }\n\n    ;\n    return monthly_totals;\n  }\n\n  onlyRegionTotals() {\n    fetch(\"./migrants2019.json\", {\n      mode: 'cors',\n      method: 'get',\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(response => response.json()).then(fulldata => {\n      let totals = this.dataToTotals(fulldata, this.state.value); // console.log(\"this.state.value\", this.state.value);\n\n      console.log(\"totals\", totals);\n      this.setState({\n        migrants2019: totals\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \" \"), React.createElement(\"div\", {\n      className: \"GridContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"Header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"2019 Recorded Migrant Deaths \"), React.createElement(\"p\", {\n      className: \"Header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \" Data from \", React.createElement(\"a\", {\n      href: \"https://missingmigrants.iom.int/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Missing Migrants Project\"), \".\"), React.createElement(\"hr\", {\n      className: \"BottomLine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"Header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \" Select from the drop down list to see records by month. If there are no records for the month, data will not be displayed for that region. \"), React.createElement(\"select\", {\n      value: this.state.value,\n      onChange: this.onSelectChange,\n      id: \"months\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \" -- reported month -- \"), React.createElement(\"option\", {\n      value: \"Jan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"January\"), React.createElement(\"option\", {\n      value: \"Feb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"February\"), React.createElement(\"option\", {\n      value: \"Mar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"March\"), React.createElement(\"option\", {\n      value: \"Apr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"April\"), React.createElement(\"option\", {\n      value: \"May\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"May\"), React.createElement(\"option\", {\n      value: \"Jun\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"June\"), React.createElement(\"option\", {\n      value: \"Jul\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"July\"), React.createElement(\"option\", {\n      value: \"Aug\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"August\"), React.createElement(\"option\", {\n      value: \"Sep\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"September\"), React.createElement(\"option\", {\n      value: \"Oct\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"October\"), React.createElement(\"option\", {\n      value: \"Nov\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"November\"), React.createElement(\"option\", {\n      value: \"Dec\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"December\")), React.createElement(\"div\", {\n      id: \"BarChart\",\n      className: \"BarChart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.state.value ? Object.keys(this.state.migrants2019).map(region => this.state.migrants2019[region] > 1 ? React.createElement(\"div\", {\n      className: \"BarChart-bar\",\n      style: {\n        width: this.state.migrants2019[region] * 9 + \"px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, region, React.createElement(\"span\", {\n      className: \"total\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \" \", this.state.migrants2019[region], \" \")) : null) : this.state.regionTotals.map(data => React.createElement(\"div\", {\n      className: \"BarChart-bar\",\n      style: {\n        width: data.total\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, data.region, React.createElement(\"span\", {\n      className: \"total\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \" \", data.total, \" \")))), React.createElement(\"div\", {\n      className: \"BarChart-max\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"max\"), React.createElement(\"hr\", {\n      className: \"BottomLine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }))) // return closing tag\n    ; // render closing tag\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/eraming/Documents/Kickstart/Winter2020/HW3/tracing-migrants-react/src/App.js"],"names":["React","Component","App","state","regionTotals","migrants2019","value","onSelectChange","ev","setState","target","onlyRegionTotals","componentDidMount","fetch","mode","method","headers","then","response","json","data","console","log","dataToTotals","fulldata","selectedMonth","monthly_totals","region","dead","month","migrantInfo","parseFloat","totals","render","Object","keys","map","width","total"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\nclass App extends Component {\n  state = {\n    regionTotals: [],\n    migrants2019: [],\n    value: '',\n  }\n\n\nonSelectChange = (ev) => {\n  this.setState({value: ev.target.value});\n  this.onlyRegionTotals();\n\n}\n\n  componentDidMount() {\n    fetch(\"./region-total.json\", { mode: 'cors', method: 'get', headers: { 'Access-Control-Allow-Origin': '*' }})\n      .then(response => response.json())\n      .then(data => {\n\n        console.log(\"year total by region:\", data);\n        this.setState({\n          regionTotals: data,\n\n        });\n\n        this.onlyRegionTotals();\n\n      });\n  }\n\n  dataToTotals(fulldata, selectedMonth){\n\n    let monthly_totals = {\n      'US-Mexico Border': 0,\n      'Sub-Saharan Africa': 0,\n      'Mediterranean': 0,\n      'North Africa': 0,\n      'South East Asia': 0,\n      'South Asia': 0,\n      'South America': 0,\n      'Horn of Africa': 0,\n      'Middle East': 0,\n      'Europe': 0,\n      'Central America': 0,\n    }\n\n    let region;\n    let dead;\n    let month;\n\n\n    for (let migrantInfo of fulldata) {\n        region = migrantInfo['Region of Incident'];\n        dead = parseFloat(migrantInfo['Number Dead']);\n        month = migrantInfo['Reported Month'];\n\n        if (region && month === selectedMonth) {\n            monthly_totals[region] += dead;\n            console.log(monthly_totals[region], region);\n        }\n      };\n\n      return monthly_totals\n  }\n\n  onlyRegionTotals () {\n    fetch(\"./migrants2019.json\", { mode: 'cors', method: 'get', headers: { 'Access-Control-Allow-Origin': '*' }})\n      .then(response => response.json())\n      .then(fulldata => {\n        let totals  = this.dataToTotals(fulldata, this.state.value)\n        // console.log(\"this.state.value\", this.state.value);\n        console.log(\"totals\", totals);\n        this.setState({\n          migrants2019: totals,\n        });\n      });\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n      <header className=\"App-header\"> </header>\n      <div className=\"GridContainer\">\n\n      <h1 className=\"Header\">2019 Recorded Migrant Deaths </h1>\n      <p className=\"Header\"> Data from <a href=\"https://missingmigrants.iom.int/\">Missing Migrants Project</a>.</p>\n      <hr className=\"BottomLine\" />\n      \n      <p className=\"Header\"> Select from the drop down list to see records by month. If there are no records for the month,\n      data will not be displayed for that region. </p>\n\n      <select\n      value={this.state.value}\n      onChange={this.onSelectChange}\n      id=\"months\"\n      >\n        <option value> -- reported month -- </option>\n        <option value=\"Jan\">January</option>\n        <option value=\"Feb\">February</option>\n        <option value=\"Mar\">March</option>\n        <option value=\"Apr\">April</option>\n        <option value=\"May\">May</option>\n        <option value=\"Jun\">June</option>\n        <option value=\"Jul\">July</option>\n        <option value=\"Aug\">August</option>\n        <option value=\"Sep\">September</option>\n        <option value=\"Oct\">October</option>\n        <option value=\"Nov\">November</option>\n        <option value=\"Dec\">December</option>\n      </select>\n\n      <div id=\"BarChart\" className=\"BarChart\">\n\n\n{\n\n  this.state.value ? (\n\n   Object.keys(this.state.migrants2019).map(region => (\n\n    this.state.migrants2019[region] > 1 ? (\n\n     <div className=\"BarChart-bar\" style={{width: this.state.migrants2019[region] * 9 + \"px\" }}>\n     {region}\n     <span className=\"total\"> {this.state.migrants2019[region]} </span>\n     </div>\n\n   ) : null\n\n   ))\n\n   ) : (\n\n     this.state.regionTotals.map(data => (\n       <div className=\"BarChart-bar\" style={{width: data.total }} >\n       {data.region}\n       <span className=\"total\"> {data.total} </span>\n       </div>\n   ))\n\n   )\n}\n\n      </div>\n\n\n          <div className=\"BarChart-max\">max</div>\n      <hr className=\"BottomLine\" />\n\n\n\n      </div>\n</div>\n\n    // return closing tag\n    );\n  // render closing tag\n};\n// class app compotent closing tag\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}